<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:json="http://www.mulesoft.org/schema/mule/json" xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw" xmlns:db="http://www.mulesoft.org/schema/mule/db" xmlns:metadata="http://www.mulesoft.org/schema/mule/metadata" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd">
    <http:listener-config name="HTTP_Listener_Configuration" host="0.0.0.0" port="8070" doc:name="HTTP Listener Configuration"/>
    <db:mysql-config name="MySQL_Configuration" host="mudb.mulesoft-training.com" port="3306" user="mule" password="mule" database="training" doc:name="MySQL Configuration"/>
    <db:template-query name="Template_Query" doc:name="Template Query">
        <db:parameterized-query><![CDATA[insert into flights_customers (
accountType,
city,
country,
creationdate,
miles,
name,
postal,
state,
street)
values( :accountType , :city , :country , :creationdate , :miles , :name , :postal , :state, :street)]]></db:parameterized-query>
        <db:in-param name=":accountType" type="VARCHAR"/>
        <db:in-param name=":city" type="VARCHAR"/>
        <db:in-param name=":country" type="VARCHAR"/>
        <db:in-param name=":creationdate" type="TIMESTAMP"/>
        <db:in-param name=":miles" type="BIGINT"/>
        <db:in-param name=":name" type="VARCHAR"/>
        <db:in-param name=":postal" type="VARCHAR"/>
        <db:in-param name=":state" type="VARCHAR"/>
        <db:in-param name=":street" type="VARCHAR"/>
    </db:template-query>
    <flow name="accountcustomerFlow">
        <http:listener config-ref="HTTP_Listener_Configuration" path="/Accounts" allowedMethods="GET" doc:name="HTTP"/>
        <db:select config-ref="MySQL_Configuration" doc:name="Database">
            <db:parameterized-query><![CDATA[select * 
from flights_customers]]></db:parameterized-query>
        </db:select>
        <dw:transform-message doc:name="Transform Message" metadata:id="262b34ca-5f1d-4df7-92a2-23e47c9f24c1">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
payload map ((payload01 , indexOfPayload01) -> {
	id: payload01.accountID,
	firstName: payload01.name,
	lastName: payload01.name,
	address: payload01.street ++ payload01.city ++ " " ++ payload01.state,
	postal: payload01.postal,
	country: payload01.country,
	creationDate: payload01.creationDate as :string,
	accountType: payload01.accountType,
	miles: payload01.miles
})]]></dw:set-payload>
        </dw:transform-message>
    </flow>
    <flow name="accountcustomerByIDFlow">
        <http:listener config-ref="HTTP_Listener_Configuration" path="/Accounts/{ID}" allowedMethods="GET" doc:name="HTTP"/>
        <db:select config-ref="MySQL_Configuration" doc:name="Database">
            <db:parameterized-query><![CDATA[select * 
from flights_customers
where accountID = #[message.inboundProperties.'http.uri.params'.ID]]]></db:parameterized-query>
        </db:select>
        <dw:transform-message doc:name="Transform Message" metadata:id="6dd2d21a-c0ff-438e-9733-69e3ac9cbda8">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
payload map ((payload01 , indexOfPayload01) -> {
	id: payload01.accountID,
	firstName: payload01.name,
	lastName: payload01.name,
	address: payload01.street ++ payload01.city ++ " " ++ payload01.state,
	postal: payload01.postal,
	country: payload01.country,
	creationDate: payload01.creationDate as :string,
	accountType: payload01.accountType,
	miles: payload01.miles
})]]></dw:set-payload>
        </dw:transform-message>
    </flow>
    <flow name="accountcustomerPOSTFlow">
        <http:listener config-ref="HTTP_Listener_Configuration" path="/Accounts" allowedMethods="POST" doc:name="HTTP" metadata:id="934b3789-bafe-4dbf-b895-eaf091ae6113"/>
        <json:object-to-json-transformer returnClass="java.util.HashMap" doc:name="Object to JSON"/>
    </flow>
</mule>
